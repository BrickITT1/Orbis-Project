services:
  app:
    build:
      context: .
      args:
        - DATABASE_URL=ecto://postgres:admin@db/backend_dev
        - SECRET_KEY_BASE=abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890
        - PG_USERNAME=postgres
        - PG_PASSWORD=admin
        - PG_DBNAME=backend_dev
        - PG_HOST=db
        - REDIS_URL=redis://redis:6379
    ports:
      - "3000:3000"
    environment:
      - GUARDIAN_SECRET_KEY=${GUARDIAN_SECRET_KEY:-default_guardian_secret}
      - DATABASE_URL=ecto://postgres:admin@db/backend_dev
      - SECRET_KEY_BASE=abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890
      - PG_USERNAME=postgres
      - PG_PASSWORD=admin
      - PG_DBNAME=backend_dev
      - PG_HOST=db
      - REDIS_URL=redis://redis:6379
      - ELIXIR_ERL_OPTIONS="+fnu"
    command: >
      sh -c "while ! pg_isready -h db -p 5432; do sleep 1; done;
      /app/bin/backend eval 'Backend.Release.migrate' &&
      /app/bin/backend start"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  chat_service:
    build:
      context: ./chat_service
    environment:
      - SECRET_KEY_BASE=${SECRET_KEY_BASE:-0jANUI+/72+6E79fZUp2AHpgtu8CtzNmKHO1mG17QqM2XwX7/dV/q9WJwxTUkdui}
      - DATABASE_URL=ecto://postgres:admin@chat_db/chat_service_dev
      - ELIXIR_ERL_OPTIONS="+fnu" # Для решения проблемы с кодировкой
      - PHX_SERVER=true
    ports:
      - "3004:4000"
    # depends_on:
    # chat_db:
    #  condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d chat_service_dev"]
      interval: 5s
      timeout: 5s
      retries: 10
    command: >
      sh -c "
      while ! pg_isready -h chat_db -p 5432; do 
        echo 'Waiting for database...';
        sleep 2; 
      done;
      /app/bin/chat_service eval 'ChatService.Release.migrate' && 
      /app/bin/chat_service start
      "
    depends_on:
      chat_db:
        condition: service_healthy

  chat_db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: chat_service_dev
    ports:
      - "5433:5432"
    volumes:
      - chat_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d chat_service_dev"]
      interval: 2s
      timeout: 2s
      retries: 20

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: backend_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
  chat_data:
